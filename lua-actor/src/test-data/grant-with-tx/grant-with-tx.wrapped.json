{
  "issuer": {
    "id": "did:pkh:eip155:1:0x0c52E6927A3536Fc260764151Dc15640b7022c9b"
  },
  "credentialSubject": {
    "id": "did:example:grant-recipient-1",
    "agreement": "",
    "params": {
      "partyAEthAddress": "0xB49e45Affd4963374e72f850B6Cae84939e58F78",
      "grantRecipientAddress": "0xBe32388C134a952cdBCc5673E93d46FfD8b85065",
      "grantAmount": 100,
      "tokenAllocatorAddress": "0xB47855e843c4F9D54408372DA4CA79D20542d168"
    }
  },
  "type": [
    "VerifiableCredential",
    "AgreementCredential"
  ],
  "issuanceDate": "2025-05-06T16:19:54.501Z",
  "@context": [
    "https://www.w3.org/2018/credentials/v1"
  ],
  "proof": {
    "verificationMethod": "did:pkh:eip155:1:0x0c52E6927A3536Fc260764151Dc15640b7022c9b#blockchainAccountId",
    "created": "2025-05-06T16:19:54.501Z",
    "proofPurpose": "assertionMethod",
    "type": "EthereumEip712Signature2021",
    "proofValue": "0x30e1934e1e06526c45b4ed292267dce76ad1f19b5704aceb62f410cb66bddd507ae2bdfadf39580349569c0b7121767fc486e5fc1c788eb9b42426a7d64fc00a1b",
    "eip712": {
      "domain": {
        "chainId": 1,
        "name": "VerifiableCredential",
        "version": "1"
      },
      "types": {
        "EIP712Domain": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "version",
            "type": "string"
          },
          {
            "name": "chainId",
            "type": "uint256"
          }
        ],
        "CredentialSubject": [
          {
            "name": "agreement",
            "type": "string"
          },
          {
            "name": "id",
            "type": "string"
          },
          {
            "name": "params",
            "type": "Params"
          }
        ],
        "Params": [
          {
            "name": "grantAmount",
            "type": "uint256"
          },
          {
            "name": "grantRecipientAddress",
            "type": "string"
          },
          {
            "name": "partyAEthAddress",
            "type": "string"
          },
          {
            "name": "tokenAllocatorAddress",
            "type": "string"
          }
        ],
        "Issuer": [
          {
            "name": "id",
            "type": "string"
          }
        ],
        "Proof": [
          {
            "name": "created",
            "type": "string"
          },
          {
            "name": "proofPurpose",
            "type": "string"
          },
          {
            "name": "type",
            "type": "string"
          },
          {
            "name": "verificationMethod",
            "type": "string"
          }
        ],
        "VerifiableCredential": [
          {
            "name": "@context",
            "type": "string[]"
          },
          {
            "name": "credentialSubject",
            "type": "CredentialSubject"
          },
          {
            "name": "issuanceDate",
            "type": "string"
          },
          {
            "name": "issuer",
            "type": "Issuer"
          },
          {
            "name": "proof",
            "type": "Proof"
          },
          {
            "name": "type",
            "type": "string[]"
          }
        ]
      },
      "primaryType": "VerifiableCredential"
    }
  }
}